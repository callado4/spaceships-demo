apply plugin: 'application'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version = "2.0-SNAPSHOT"

mainClassName = 'co.paralleluniverse.spaceships.Spaceships'
ext.mainClass = mainClassName

repositories {
    flatDir { dirs 'baselib' }
    //    repositories {
    //        mavenCentral()
    //        mavenLocal()
    //        maven { url "https://oss.sonatype.org/content/repositories/releases" }
    //        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    //        maven { url "http://download.oracle.com/maven/" }
    //    }
}

configurations {
    quasar
}
    
dependencies {
    compile "co.paralleluniverse:spacebase-core:2.0"
    compile "co.paralleluniverse:quasar-core:0.3.0"
    compile "co.paralleluniverse:quasar-actors:0.3.0"
    compile "com.google.guava:guava:15.0"
    compile "com.codahale.metrics:metrics-core:3.0.1" 
    compile "org.jogamp.jogl:jogl-all:2.1.0"
    compile "org.jogamp.gluegen:gluegen-rt:2.1.0"
    runtime "org.jogamp.jogl:jogl-all:2.1.0:natives-linux-i586", "org.jogamp.jogl:jogl-all:2.1.0:natives-linux-amd64", 
            "org.jogamp.jogl:jogl-all:2.1.0:natives-windows-i586", "org.jogamp.jogl:jogl-all:2.1.0:natives-windows-amd64", 
            "org.jogamp.jogl:jogl-all:2.1.0:natives-macosx-universal"
    runtime "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-linux-i586", "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-linux-amd64", 
            "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-windows-i586", "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-windows-amd64", 
            "org.jogamp.gluegen:gluegen-rt:2.1.0:natives-macosx-universal"
    runtime "net.sf.trove4j:trove4j:3.0.2"        

    quasar  "co.paralleluniverse:quasar-core:0.3.0"
    
    // we need the following only because the jars are in baselib, and gradle doesn't knwo about their transitive dependencies
    runtime "org.ow2.asm:asm:4.1", "org.ow2.asm:asm-commons:4.1", "org.ow2.asm:asm-util:4.1", "org.ow2.asm:asm-tree:4.1", "org.ow2.asm:asm-analysis:4.1"
    runtime "org.slf4j:slf4j-api:1.7.5"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.0-beta9", "org.apache.logging.log4j:log4j-api:2.0-beta9", "org.apache.logging.log4j:log4j-core:2.0-beta9"
    runtime "com.lmax:disruptor:3.2.0" // required for log4j
}

task copyLibs(type: Copy) {
    from { configurations.runtime }
    into { "${rootProject.projectDir}/baselib" }
    //    include 'gluegen-*.jar'
    //    include 'jogl-*.jar'
}

task copyShaders(type:Copy) {
    from 'src/main/java/co/paralleluniverse/spaceships/render/shader'
    into 'build/classes/main/co/paralleluniverse/spaceships/render/shader'
}
classes.dependsOn copyShaders

tasks.withType(JavaExec) {
    jvmArgs '-server'
    jvmArgs "-javaagent:${configurations.quasar.iterator().next()}" // =vdmc (verbose, debug, allow monitors, check class)
    // systemProperty "co.paralleluniverse.fibers.DefaultFiberPool.parallelism", "4"
    systemProperty "co.paralleluniverse.fibers.DefaultFiberPool.monitor", "JMX" // "METRICS" // "NONE" //

    // memory
    jvmArgs '-Xmx1024m'
    // jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=50'
    
    // profiling
    jvmArgs '-XX:+UnlockCommercialFeatures', '-XX:+FlightRecorder'
    // jvmArgs '-verbose:gc'
    // jvmArgs '-XX:+UnlockDiagnosticVMOptions', '-XX:+TraceClassLoading', '-XX:+LogCompilation' // use with jitwatch
    // jvmArgs '-XX:+UnlockDiagnosticVMOptions', '-XX:+PrintInlining'
    

    // logging
    systemProperty "log4j.configurationFile", "${rootProject.projectDir}/log4j.xml"
    systemProperty "Log4jContextSelector", "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
    
    // debugging
    //jvmArgs '-ea'
    // systemProperty "co.paralleluniverse.debugMode", "true"
    systemProperty "co.paralleluniverse.globalFlightRecorder", "true"
    systemProperty "co.paralleluniverse.flightRecorderDumpFile", "spaceships.log"
    systemProperty "co.paralleluniverse.monitoring.flightRecorderSize","100000" 
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

task classpath << {
    println configurations.runtime.files.join(':')
}

defaultTasks 'build','run'